/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CityAdmin;

import Business.City.City;
import Business.EcoSystem;
import Business.Employee.UserDetails;
import Business.Role.UserRole;
import Business.State.State;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lahar
 */
public class ManageUsersPanel extends javax.swing.JPanel {

    private JPanel displayPanel;
    private EcoSystem system;
    private UserAccount ua;
    private City city;
    private boolean flag=false;
    /**
     * Creates new form ManageUsersPanel
     */

    ManageUsersPanel(JPanel displayPanel, EcoSystem system,UserAccount ua,City city) {
        initComponents();
        this.ua=ua;
        this.displayPanel = displayPanel;
        this.system = system;
        this.city=city;

        populateUserTable();
    }

     private void populateUserTable() {
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();

        model.setRowCount(0);
        for (UserAccount userAccount : system.getUserAccountDirectory().getUserAccountList())
                {
            Object[] row = new Object[4];
            row[0] = userAccount;
            row[1]= userAccount.getUsername();
            row[2]= userAccount.getConsumption();
            row[3]= userAccount.getCurrentReading();
            
            for(WorkRequest request : system.getWorkQueue().getWorkRequestList())
            {
            if(request.getStatus().equalsIgnoreCase("Verified"))
            {
                flag=true;
            }
            }
                    if(city.getName().equalsIgnoreCase(userAccount.getCity()))
                    {
                         model.addRow(row);
                    }
            
        
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        viewbtn = new javax.swing.JButton();
        delbtn = new javax.swing.JButton();
        searchbtn = new javax.swing.JButton();
        idField = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 51, 51));

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "USERNAME", "CONSUMPTION", "CURRENT READING"
            }
        ));
        jScrollPane1.setViewportView(userTable);

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 3, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("MANAGE USERS");

        viewbtn.setBackground(new java.awt.Color(255, 255, 255));
        viewbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        viewbtn.setText("VIEW DETAILS");
        viewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbtnActionPerformed(evt);
            }
        });

        delbtn.setBackground(new java.awt.Color(255, 255, 255));
        delbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        delbtn.setText("DELETE");
        delbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delbtnActionPerformed(evt);
            }
        });

        searchbtn.setBackground(new java.awt.Color(255, 255, 255));
        searchbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        searchbtn.setText("SEARCH BY ID");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 255, 255));
        backBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        backBtn.setText(">>BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(775, 775, 775)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(540, 540, 540)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(675, 675, 675)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchbtn)
                                .addGap(49, 49, 49)
                                .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(viewbtn)
                                .addGap(40, 40, 40)
                                .addComponent(delbtn)
                                .addGap(66, 66, 66)
                                .addComponent(backBtn)))))
                .addContainerGap(558, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbtn)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewbtn)
                    .addComponent(delbtn)
                    .addComponent(backBtn))
                .addContainerGap(307, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbtnActionPerformed
        
        int selectedrow=userTable.getSelectedRow();
        
        if(selectedrow>=0)
        {
            UserAccount ua=(UserAccount)userTable.getValueAt(selectedrow, 0);
          //  UserAccount ua=system.getUserAccountDirectory().searchUser(selectedrow);
            ViewUsersPanel panel = new ViewUsersPanel(displayPanel, ua);
            displayPanel.add("ViewUsersPanel", panel);
            CardLayout layout = (CardLayout) displayPanel.getLayout();
            layout.next(displayPanel);
        }
    
      else
            JOptionPane.showMessageDialog(null,"Please select any row");
        
       
        // TODO add your handling code here:
    }//GEN-LAST:event_viewbtnActionPerformed

    private void delbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delbtnActionPerformed

         int selectedrow=userTable.getSelectedRow();
        
        if(selectedrow>=0)
        {
            int dialogButton=JOptionPane.YES_NO_OPTION;
            int dialogResult=JOptionPane.showConfirmDialog(null, "would you like to delete the User ?","Warning",dialogButton);
            if(dialogResult==JOptionPane.YES_OPTION)
            {
            UserAccount ua=(UserAccount)userTable.getValueAt(selectedrow, 0);
            system.getUserAccountDirectory().removeUserAccount(ua);
            
             JOptionPane.showMessageDialog(null,"User has been deleted");

             populateUserTable();
            }   
        }
         else
            JOptionPane.showMessageDialog(null,"Please select any row","Warning",JOptionPane.WARNING_MESSAGE);
        // TODO add your handling code here:
    }//GEN-LAST:event_delbtnActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
         
         if(idField.getText().isEmpty()){
             JOptionPane.showMessageDialog(null,"Please enter User ID","Warning",JOptionPane.INFORMATION_MESSAGE);
         }
         else{
             int userId=Integer.parseInt(idField.getText());
         
         UserAccount userAccount= system.getUserAccountDirectory().searchUser(userId);
         if(userAccount==null)
         {
             JOptionPane.showMessageDialog(null,"User ID you entered does not exist","Warning",JOptionPane.INFORMATION_MESSAGE);
             idField.setText("");
         }
         else
         {
            ViewUsersPanel panel = new ViewUsersPanel(displayPanel, userAccount);
            displayPanel.add("ViewUsersPanel", panel);
            CardLayout layout = (CardLayout) displayPanel.getLayout();
            layout.next(displayPanel);
            idField.setText("");
         }
         }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchbtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        displayPanel.remove(this);
        CardLayout layout = (CardLayout) displayPanel.getLayout();
        layout.previous(displayPanel);        // TODO add your handling code here:
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton delbtn;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTable userTable;
    private javax.swing.JButton viewbtn;
    // End of variables declaration//GEN-END:variables
}
